/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Program,
    ProgramFromJSON,
    ProgramToJSON,
    ProgramType,
    ProgramTypeFromJSON,
    ProgramTypeToJSON,
} from '../models';

export interface ProgramsGetRequest {
    publisherId?: number;
    programType?: ProgramType;
    page?: number;
    pageSize?: number;
    search?: string | null;
    organizationId?: number;
}

export interface ProgramsIdGetRequest {
    id: number;
}

/**
 * 
 */
export class ProgramsApi extends runtime.BaseAPI {

    /**
     */
    async programsGetRaw(requestParameters: ProgramsGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<Program>>> {
        const queryParameters: any = {};

        if (requestParameters.publisherId !== undefined) {
            queryParameters['PublisherId'] = requestParameters.publisherId;
        }

        if (requestParameters.programType !== undefined) {
            queryParameters['ProgramType'] = requestParameters.programType;
        }

        if (requestParameters.page !== undefined) {
            queryParameters['Page'] = requestParameters.page;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['PageSize'] = requestParameters.pageSize;
        }

        if (requestParameters.search !== undefined) {
            queryParameters['Search'] = requestParameters.search;
        }

        if (requestParameters.organizationId !== undefined) {
            queryParameters['OrganizationId'] = requestParameters.organizationId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/Programs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ProgramFromJSON));
    }

    /**
     */
    async programsGet(requestParameters: ProgramsGetRequest, initOverrides?: RequestInit): Promise<Array<Program>> {
        const response = await this.programsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async programsIdGetRaw(requestParameters: ProgramsIdGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Program>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling programsIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/Programs/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProgramFromJSON(jsonValue));
    }

    /**
     */
    async programsIdGet(requestParameters: ProgramsIdGetRequest, initOverrides?: RequestInit): Promise<Program> {
        const response = await this.programsIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
