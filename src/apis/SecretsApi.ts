/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Secret,
    SecretFromJSON,
    SecretToJSON,
} from '../models';

export interface SecretsDeleteRequest {
    clientId?: string | null;
    secretId?: number;
}

export interface SecretsPostRequest {
    secret?: Secret;
}

/**
 * 
 */
export class SecretsApi extends runtime.BaseAPI {

    /**
     */
    async secretsDeleteRaw(requestParameters: SecretsDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<boolean>> {
        const queryParameters: any = {};

        if (requestParameters.clientId !== undefined) {
            queryParameters['clientId'] = requestParameters.clientId;
        }

        if (requestParameters.secretId !== undefined) {
            queryParameters['secretId'] = requestParameters.secretId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/Secrets`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async secretsDelete(requestParameters: SecretsDeleteRequest, initOverrides?: RequestInit): Promise<boolean> {
        const response = await this.secretsDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async secretsPostRaw(requestParameters: SecretsPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Secret>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/Secrets`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SecretToJSON(requestParameters.secret),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SecretFromJSON(jsonValue));
    }

    /**
     */
    async secretsPost(requestParameters: SecretsPostRequest, initOverrides?: RequestInit): Promise<Secret> {
        const response = await this.secretsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
