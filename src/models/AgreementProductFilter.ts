/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  AgreementProductsSubFilter,
  AgreementProductsSubFilterFromJSON,
  AgreementProductsSubFilterFromJSONTyped,
  AgreementProductsSubFilterToJSON,
  AgreementType,
  AgreementTypeFromJSON,
  AgreementTypeFromJSONTyped,
  AgreementTypeToJSON,
  SortOrder,
  SortOrderFromJSON,
  SortOrderFromJSONTyped,
  SortOrderToJSON,
} from './';

/**
 *
 * @export
 * @interface AgreementProductFilter
 */
export interface AgreementProductFilter {
  /**
   *
   * @type {Array<AgreementType>}
   * @memberof AgreementProductFilter
   */
  agreementTypeIds?: Array<AgreementType> | null;
  /**
   *
   * @type {number}
   * @memberof AgreementProductFilter
   */
  page?: number;
  /**
   *
   * @type {number}
   * @memberof AgreementProductFilter
   */
  pageSize?: number;
  /**
   *
   * @type {string}
   * @memberof AgreementProductFilter
   */
  search?: string | null;
  /**
   *
   * @type {number}
   * @memberof AgreementProductFilter
   */
  priceListId?: number;
  /**
   *
   * @type {number}
   * @memberof AgreementProductFilter
   */
  organizationId?: number;
  /**
   *
   * @type {number}
   * @memberof AgreementProductFilter
   */
  customerTenantId?: number;
  /**
   *
   * @type {number}
   * @memberof AgreementProductFilter
   */
  agreementId?: number;
  /**
   *
   * @type {boolean}
   * @memberof AgreementProductFilter
   */
  isTrial?: boolean | null;
  /**
   *
   * @type {Array<number>}
   * @memberof AgreementProductFilter
   */
  agreementIds?: Array<number> | null;
  /**
   *
   * @type {Date}
   * @memberof AgreementProductFilter
   */
  searchDate?: Date | null;
  /**
   *
   * @type {AgreementProductsSubFilter}
   * @memberof AgreementProductFilter
   */
  include?: AgreementProductsSubFilter;
  /**
   *
   * @type {AgreementProductsSubFilter}
   * @memberof AgreementProductFilter
   */
  exclude?: AgreementProductsSubFilter;
  /**
   *
   * @type {string}
   * @memberof AgreementProductFilter
   */
  sortKey?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof AgreementProductFilter
   */
  includeProductInformation?: boolean;
  /**
   *
   * @type {SortOrder}
   * @memberof AgreementProductFilter
   */
  sortOrder?: SortOrder;
}

export function AgreementProductFilterFromJSON(
  json: any,
): AgreementProductFilter {
  return AgreementProductFilterFromJSONTyped(json, false);
}

export function AgreementProductFilterFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AgreementProductFilter {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    agreementTypeIds: !exists(json, 'agreementTypeIds')
      ? undefined
      : json['agreementTypeIds'] === null
      ? null
      : (json['agreementTypeIds'] as Array<any>).map(AgreementTypeFromJSON),
    page: !exists(json, 'page') ? undefined : json['page'],
    pageSize: !exists(json, 'pageSize') ? undefined : json['pageSize'],
    search: !exists(json, 'search') ? undefined : json['search'],
    priceListId: !exists(json, 'priceListId') ? undefined : json['priceListId'],
    organizationId: !exists(json, 'organizationId')
      ? undefined
      : json['organizationId'],
    customerTenantId: !exists(json, 'customerTenantId')
      ? undefined
      : json['customerTenantId'],
    agreementId: !exists(json, 'agreementId') ? undefined : json['agreementId'],
    isTrial: !exists(json, 'isTrial') ? undefined : json['isTrial'],
    agreementIds: !exists(json, 'agreementIds')
      ? undefined
      : json['agreementIds'],
    searchDate: !exists(json, 'searchDate')
      ? undefined
      : json['searchDate'] === null
      ? null
      : new Date(json['searchDate']),
    include: !exists(json, 'include')
      ? undefined
      : AgreementProductsSubFilterFromJSON(json['include']),
    exclude: !exists(json, 'exclude')
      ? undefined
      : AgreementProductsSubFilterFromJSON(json['exclude']),
    sortKey: !exists(json, 'sortKey') ? undefined : json['sortKey'],
    includeProductInformation: !exists(json, 'includeProductInformation')
      ? undefined
      : json['includeProductInformation'],
    sortOrder: !exists(json, 'sortOrder')
      ? undefined
      : SortOrderFromJSON(json['sortOrder']),
  };
}

export function AgreementProductFilterToJSON(
  value?: AgreementProductFilter | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    agreementTypeIds:
      value.agreementTypeIds === undefined
        ? undefined
        : value.agreementTypeIds === null
        ? null
        : (value.agreementTypeIds as Array<any>).map(AgreementTypeToJSON),
    page: value.page,
    pageSize: value.pageSize,
    search: value.search,
    priceListId: value.priceListId,
    organizationId: value.organizationId,
    customerTenantId: value.customerTenantId,
    agreementId: value.agreementId,
    isTrial: value.isTrial,
    agreementIds: value.agreementIds,
    searchDate:
      value.searchDate === undefined
        ? undefined
        : value.searchDate === null
        ? null
        : value.searchDate.toISOString(),
    include: AgreementProductsSubFilterToJSON(value.include),
    exclude: AgreementProductsSubFilterToJSON(value.exclude),
    sortKey: value.sortKey,
    includeProductInformation: value.includeProductInformation,
    sortOrder: SortOrderToJSON(value.sortOrder),
  };
}
