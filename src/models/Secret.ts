/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface Secret
 */
export interface Secret {
  /**
   *
   * @type {number}
   * @memberof Secret
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof Secret
   */
  clientId?: string | null;
  /**
   *
   * @type {string}
   * @memberof Secret
   */
  value?: string | null;
  /**
   *
   * @type {string}
   * @memberof Secret
   */
  description?: string | null;
  /**
   *
   * @type {Date}
   * @memberof Secret
   */
  expiration?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof Secret
   */
  timeStamp?: Date;
}

export function SecretFromJSON(json: any): Secret {
  return SecretFromJSONTyped(json, false);
}

export function SecretFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Secret {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    clientId: !exists(json, 'clientId') ? undefined : json['clientId'],
    value: !exists(json, 'value') ? undefined : json['value'],
    description: !exists(json, 'description') ? undefined : json['description'],
    expiration: !exists(json, 'expiration')
      ? undefined
      : json['expiration'] === null
      ? null
      : new Date(json['expiration']),
    timeStamp: !exists(json, 'timeStamp')
      ? undefined
      : new Date(json['timeStamp']),
  };
}

export function SecretToJSON(value?: Secret | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    clientId: value.clientId,
    value: value.value,
    description: value.description,
    expiration:
      value.expiration === undefined
        ? undefined
        : value.expiration === null
        ? null
        : value.expiration.toISOString(),
    timeStamp:
      value.timeStamp === undefined ? undefined : value.timeStamp.toISOString(),
  };
}
