/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ObjectReference,
    ObjectReferenceFromJSON,
    ObjectReferenceFromJSONTyped,
    ObjectReferenceToJSON,
} from './';

/**
 * 
 * @export
 * @interface Program
 */
export interface Program {
    /**
     * 
     * @type {number}
     * @memberof Program
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    name?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Program
     */
    isCommitment?: boolean;
    /**
     * 
     * @type {ObjectReference}
     * @memberof Program
     */
    publisher?: ObjectReference;
}

export function ProgramFromJSON(json: any): Program {
    return ProgramFromJSONTyped(json, false);
}

export function ProgramFromJSONTyped(json: any, ignoreDiscriminator: boolean): Program {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'isCommitment': !exists(json, 'isCommitment') ? undefined : json['isCommitment'],
        'publisher': !exists(json, 'publisher') ? undefined : ObjectReferenceFromJSON(json['publisher']),
    };
}

export function ProgramToJSON(value?: Program | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'isCommitment': value.isCommitment,
        'publisher': ObjectReferenceToJSON(value.publisher),
    };
}

