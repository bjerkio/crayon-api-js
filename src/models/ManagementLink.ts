/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  ObjectReference,
  ObjectReferenceFromJSON,
  ObjectReferenceFromJSONTyped,
  ObjectReferenceToJSON,
} from './';

/**
 *
 * @export
 * @interface ManagementLink
 */
export interface ManagementLink {
  /**
   *
   * @type {string}
   * @memberof ManagementLink
   */
  link?: string | null;
  /**
   *
   * @type {ObjectReference}
   * @memberof ManagementLink
   */
  resellerCustomer?: ObjectReference;
  /**
   *
   * @type {ObjectReference}
   * @memberof ManagementLink
   */
  subscription?: ObjectReference;
  /**
   *
   * @type {string}
   * @memberof ManagementLink
   */
  text?: string | null;
}

export function ManagementLinkFromJSON(json: any): ManagementLink {
  return ManagementLinkFromJSONTyped(json, false);
}

export function ManagementLinkFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ManagementLink {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    link: !exists(json, 'link') ? undefined : json['link'],
    resellerCustomer: !exists(json, 'resellerCustomer')
      ? undefined
      : ObjectReferenceFromJSON(json['resellerCustomer']),
    subscription: !exists(json, 'subscription')
      ? undefined
      : ObjectReferenceFromJSON(json['subscription']),
    text: !exists(json, 'text') ? undefined : json['text'],
  };
}

export function ManagementLinkToJSON(value?: ManagementLink | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    link: value.link,
    resellerCustomer: ObjectReferenceToJSON(value.resellerCustomer),
    subscription: ObjectReferenceToJSON(value.subscription),
    text: value.text,
  };
}
