/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AgreementAccess,
    AgreementAccessFromJSON,
    AgreementAccessFromJSONTyped,
    AgreementAccessToJSON,
    Organization,
    OrganizationFromJSON,
    OrganizationFromJSONTyped,
    OrganizationToJSON,
    OrganizationAccessRole,
    OrganizationAccessRoleFromJSON,
    OrganizationAccessRoleFromJSONTyped,
    OrganizationAccessRoleToJSON,
    UserProfile,
    UserProfileFromJSON,
    UserProfileFromJSONTyped,
    UserProfileToJSON,
} from './';

/**
 * 
 * @export
 * @interface OrganizationAccess
 */
export interface OrganizationAccess {
    /**
     * 
     * @type {number}
     * @memberof OrganizationAccess
     */
    id?: number;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationAccess
     */
    allAgreements?: boolean;
    /**
     * 
     * @type {Array<AgreementAccess>}
     * @memberof OrganizationAccess
     */
    agreements?: Array<AgreementAccess> | null;
    /**
     * 
     * @type {Organization}
     * @memberof OrganizationAccess
     */
    organization?: Organization;
    /**
     * 
     * @type {UserProfile}
     * @memberof OrganizationAccess
     */
    user?: UserProfile;
    /**
     * 
     * @type {OrganizationAccessRole}
     * @memberof OrganizationAccess
     */
    role?: OrganizationAccessRole;
    /**
     * 
     * @type {string}
     * @memberof OrganizationAccess
     */
    crayonCompanyName?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof OrganizationAccess
     */
    timestamp?: Date;
}

export function OrganizationAccessFromJSON(json: any): OrganizationAccess {
    return OrganizationAccessFromJSONTyped(json, false);
}

export function OrganizationAccessFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationAccess {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'allAgreements': !exists(json, 'allAgreements') ? undefined : json['allAgreements'],
        'agreements': !exists(json, 'agreements') ? undefined : (json['agreements'] === null ? null : (json['agreements'] as Array<any>).map(AgreementAccessFromJSON)),
        'organization': !exists(json, 'organization') ? undefined : OrganizationFromJSON(json['organization']),
        'user': !exists(json, 'user') ? undefined : UserProfileFromJSON(json['user']),
        'role': !exists(json, 'role') ? undefined : OrganizationAccessRoleFromJSON(json['role']),
        'crayonCompanyName': !exists(json, 'crayonCompanyName') ? undefined : json['crayonCompanyName'],
        'timestamp': !exists(json, 'timestamp') ? undefined : (new Date(json['timestamp'])),
    };
}

export function OrganizationAccessToJSON(value?: OrganizationAccess | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'allAgreements': value.allAgreements,
        'agreements': value.agreements === undefined ? undefined : (value.agreements === null ? null : (value.agreements as Array<any>).map(AgreementAccessToJSON)),
        'organization': OrganizationToJSON(value.organization),
        'user': UserProfileToJSON(value.user),
        'role': OrganizationAccessRoleToJSON(value.role),
        'crayonCompanyName': value.crayonCompanyName,
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp.toISOString()),
    };
}

