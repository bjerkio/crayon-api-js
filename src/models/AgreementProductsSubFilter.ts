/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AgreementProductsSubFilter
 */
export interface AgreementProductsSubFilter {
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    partNumbers?: Array<string> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof AgreementProductsSubFilter
     */
    publisherIds?: Array<number> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    publisherNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    poolNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    operatingSystemNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    levelNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    languageNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    licenseAgreementTypeNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    licenseTypeNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    productFamilyNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    productTypeNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    programNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    offeringNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    purchasePeriodNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    purchaseUnitNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    versionNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    regionNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    productCategoryNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    catalogNames?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgreementProductsSubFilter
     */
    billingCycles?: Array<string> | null;
}

export function AgreementProductsSubFilterFromJSON(json: any): AgreementProductsSubFilter {
    return AgreementProductsSubFilterFromJSONTyped(json, false);
}

export function AgreementProductsSubFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgreementProductsSubFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'partNumbers': !exists(json, 'partNumbers') ? undefined : json['partNumbers'],
        'publisherIds': !exists(json, 'publisherIds') ? undefined : json['publisherIds'],
        'publisherNames': !exists(json, 'publisherNames') ? undefined : json['publisherNames'],
        'poolNames': !exists(json, 'poolNames') ? undefined : json['poolNames'],
        'operatingSystemNames': !exists(json, 'operatingSystemNames') ? undefined : json['operatingSystemNames'],
        'levelNames': !exists(json, 'levelNames') ? undefined : json['levelNames'],
        'languageNames': !exists(json, 'languageNames') ? undefined : json['languageNames'],
        'licenseAgreementTypeNames': !exists(json, 'licenseAgreementTypeNames') ? undefined : json['licenseAgreementTypeNames'],
        'licenseTypeNames': !exists(json, 'licenseTypeNames') ? undefined : json['licenseTypeNames'],
        'productFamilyNames': !exists(json, 'productFamilyNames') ? undefined : json['productFamilyNames'],
        'productTypeNames': !exists(json, 'productTypeNames') ? undefined : json['productTypeNames'],
        'programNames': !exists(json, 'programNames') ? undefined : json['programNames'],
        'offeringNames': !exists(json, 'offeringNames') ? undefined : json['offeringNames'],
        'purchasePeriodNames': !exists(json, 'purchasePeriodNames') ? undefined : json['purchasePeriodNames'],
        'purchaseUnitNames': !exists(json, 'purchaseUnitNames') ? undefined : json['purchaseUnitNames'],
        'versionNames': !exists(json, 'versionNames') ? undefined : json['versionNames'],
        'regionNames': !exists(json, 'regionNames') ? undefined : json['regionNames'],
        'productCategoryNames': !exists(json, 'productCategoryNames') ? undefined : json['productCategoryNames'],
        'catalogNames': !exists(json, 'catalogNames') ? undefined : json['catalogNames'],
        'billingCycles': !exists(json, 'billingCycles') ? undefined : json['billingCycles'],
    };
}

export function AgreementProductsSubFilterToJSON(value?: AgreementProductsSubFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'partNumbers': value.partNumbers,
        'publisherIds': value.publisherIds,
        'publisherNames': value.publisherNames,
        'poolNames': value.poolNames,
        'operatingSystemNames': value.operatingSystemNames,
        'levelNames': value.levelNames,
        'languageNames': value.languageNames,
        'licenseAgreementTypeNames': value.licenseAgreementTypeNames,
        'licenseTypeNames': value.licenseTypeNames,
        'productFamilyNames': value.productFamilyNames,
        'productTypeNames': value.productTypeNames,
        'programNames': value.programNames,
        'offeringNames': value.offeringNames,
        'purchasePeriodNames': value.purchasePeriodNames,
        'purchaseUnitNames': value.purchaseUnitNames,
        'versionNames': value.versionNames,
        'regionNames': value.regionNames,
        'productCategoryNames': value.productCategoryNames,
        'catalogNames': value.catalogNames,
        'billingCycles': value.billingCycles,
    };
}

