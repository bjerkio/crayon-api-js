/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AssetOrderLineError,
    AssetOrderLineErrorFromJSON,
    AssetOrderLineErrorFromJSONTyped,
    AssetOrderLineErrorToJSON,
    AssetScope,
    AssetScopeFromJSON,
    AssetScopeFromJSONTyped,
    AssetScopeToJSON,
    AssetTags,
    AssetTagsFromJSON,
    AssetTagsFromJSONTyped,
    AssetTagsToJSON,
    AssetType,
    AssetTypeFromJSON,
    AssetTypeFromJSONTyped,
    AssetTypeToJSON,
    BillingCycleType,
    BillingCycleTypeFromJSON,
    BillingCycleTypeFromJSONTyped,
    BillingCycleTypeToJSON,
    SalesPriceType,
    SalesPriceTypeFromJSON,
    SalesPriceTypeFromJSONTyped,
    SalesPriceTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface AssetOrderLine
 */
export interface AssetOrderLine {
    /**
     * 
     * @type {string}
     * @memberof AssetOrderLine
     */
    productId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AssetOrderLine
     */
    subscriptionId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof AssetOrderLine
     */
    armRegionName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AssetOrderLine
     */
    skuId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AssetOrderLine
     */
    productVariantId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof AssetOrderLine
     */
    quantity?: number;
    /**
     * 
     * @type {BillingCycleType}
     * @memberof AssetOrderLine
     */
    billingCycle?: BillingCycleType;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AssetOrderLine
     */
    provisioningContext?: { [key: string]: string; } | null;
    /**
     * 
     * @type {AssetType}
     * @memberof AssetOrderLine
     */
    type?: AssetType;
    /**
     * 
     * @type {boolean}
     * @memberof AssetOrderLine
     */
    requiresInventoryCheck?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AssetOrderLine
     */
    catalogItemId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AssetOrderLine
     */
    termDuration?: string | null;
    /**
     * 
     * @type {AssetScope}
     * @memberof AssetOrderLine
     */
    scope?: AssetScope;
    /**
     * 
     * @type {SalesPriceType}
     * @memberof AssetOrderLine
     */
    resellerPriceType?: SalesPriceType;
    /**
     * 
     * @type {number}
     * @memberof AssetOrderLine
     */
    resellerPriceTypeValue?: number;
    /**
     * 
     * @type {boolean}
     * @memberof AssetOrderLine
     */
    isTrial?: boolean;
    /**
     * 
     * @type {AssetTags}
     * @memberof AssetOrderLine
     */
    tags?: AssetTags;
    /**
     * 
     * @type {Array<AssetOrderLineError>}
     * @memberof AssetOrderLine
     */
    errors?: Array<AssetOrderLineError> | null;
}

export function AssetOrderLineFromJSON(json: any): AssetOrderLine {
    return AssetOrderLineFromJSONTyped(json, false);
}

export function AssetOrderLineFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetOrderLine {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productId': !exists(json, 'productId') ? undefined : json['productId'],
        'subscriptionId': !exists(json, 'subscriptionId') ? undefined : json['subscriptionId'],
        'armRegionName': !exists(json, 'armRegionName') ? undefined : json['armRegionName'],
        'skuId': !exists(json, 'skuId') ? undefined : json['skuId'],
        'productVariantId': !exists(json, 'productVariantId') ? undefined : json['productVariantId'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'billingCycle': !exists(json, 'billingCycle') ? undefined : BillingCycleTypeFromJSON(json['billingCycle']),
        'provisioningContext': !exists(json, 'provisioningContext') ? undefined : json['provisioningContext'],
        'type': !exists(json, 'type') ? undefined : AssetTypeFromJSON(json['type']),
        'requiresInventoryCheck': !exists(json, 'requiresInventoryCheck') ? undefined : json['requiresInventoryCheck'],
        'catalogItemId': !exists(json, 'catalogItemId') ? undefined : json['catalogItemId'],
        'termDuration': !exists(json, 'termDuration') ? undefined : json['termDuration'],
        'scope': !exists(json, 'scope') ? undefined : AssetScopeFromJSON(json['scope']),
        'resellerPriceType': !exists(json, 'resellerPriceType') ? undefined : SalesPriceTypeFromJSON(json['resellerPriceType']),
        'resellerPriceTypeValue': !exists(json, 'resellerPriceTypeValue') ? undefined : json['resellerPriceTypeValue'],
        'isTrial': !exists(json, 'isTrial') ? undefined : json['isTrial'],
        'tags': !exists(json, 'tags') ? undefined : AssetTagsFromJSON(json['tags']),
        'errors': !exists(json, 'errors') ? undefined : (json['errors'] === null ? null : (json['errors'] as Array<any>).map(AssetOrderLineErrorFromJSON)),
    };
}

export function AssetOrderLineToJSON(value?: AssetOrderLine | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productId': value.productId,
        'subscriptionId': value.subscriptionId,
        'armRegionName': value.armRegionName,
        'skuId': value.skuId,
        'productVariantId': value.productVariantId,
        'quantity': value.quantity,
        'billingCycle': BillingCycleTypeToJSON(value.billingCycle),
        'provisioningContext': value.provisioningContext,
        'type': AssetTypeToJSON(value.type),
        'requiresInventoryCheck': value.requiresInventoryCheck,
        'catalogItemId': value.catalogItemId,
        'termDuration': value.termDuration,
        'scope': AssetScopeToJSON(value.scope),
        'resellerPriceType': SalesPriceTypeToJSON(value.resellerPriceType),
        'resellerPriceTypeValue': value.resellerPriceTypeValue,
        'isTrial': value.isTrial,
        'tags': AssetTagsToJSON(value.tags),
        'errors': value.errors === undefined ? undefined : (value.errors === null ? null : (value.errors as Array<any>).map(AssetOrderLineErrorToJSON)),
    };
}

