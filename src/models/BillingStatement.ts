/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ObjectReference,
    ObjectReferenceFromJSON,
    ObjectReferenceFromJSONTyped,
    ObjectReferenceToJSON,
    Price,
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    ProvisionType,
    ProvisionTypeFromJSON,
    ProvisionTypeFromJSONTyped,
    ProvisionTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface BillingStatement
 */
export interface BillingStatement {
    /**
     * 
     * @type {number}
     * @memberof BillingStatement
     */
    id?: number;
    /**
     * 
     * @type {Price}
     * @memberof BillingStatement
     */
    totalSalesPrice?: Price;
    /**
     * 
     * @type {ObjectReference}
     * @memberof BillingStatement
     */
    invoiceProfile?: ObjectReference;
    /**
     * 
     * @type {ObjectReference}
     * @memberof BillingStatement
     */
    organization?: ObjectReference;
    /**
     * 
     * @type {Date}
     * @memberof BillingStatement
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof BillingStatement
     */
    endDate?: Date;
    /**
     * 
     * @type {ProvisionType}
     * @memberof BillingStatement
     */
    provisionType?: ProvisionType;
    /**
     * 
     * @type {string}
     * @memberof BillingStatement
     */
    orderId?: string | null;
}

export function BillingStatementFromJSON(json: any): BillingStatement {
    return BillingStatementFromJSONTyped(json, false);
}

export function BillingStatementFromJSONTyped(json: any, ignoreDiscriminator: boolean): BillingStatement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'totalSalesPrice': !exists(json, 'totalSalesPrice') ? undefined : PriceFromJSON(json['totalSalesPrice']),
        'invoiceProfile': !exists(json, 'invoiceProfile') ? undefined : ObjectReferenceFromJSON(json['invoiceProfile']),
        'organization': !exists(json, 'organization') ? undefined : ObjectReferenceFromJSON(json['organization']),
        'startDate': !exists(json, 'startDate') ? undefined : (new Date(json['startDate'])),
        'endDate': !exists(json, 'endDate') ? undefined : (new Date(json['endDate'])),
        'provisionType': !exists(json, 'provisionType') ? undefined : ProvisionTypeFromJSON(json['provisionType']),
        'orderId': !exists(json, 'orderId') ? undefined : json['orderId'],
    };
}

export function BillingStatementToJSON(value?: BillingStatement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'totalSalesPrice': PriceToJSON(value.totalSalesPrice),
        'invoiceProfile': ObjectReferenceToJSON(value.invoiceProfile),
        'organization': ObjectReferenceToJSON(value.organization),
        'startDate': value.startDate === undefined ? undefined : (value.startDate.toISOString()),
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString()),
        'provisionType': ProvisionTypeToJSON(value.provisionType),
        'orderId': value.orderId,
    };
}

