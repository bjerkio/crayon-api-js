/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  ObjectReference,
  ObjectReferenceFromJSON,
  ObjectReferenceFromJSONTyped,
  ObjectReferenceToJSON,
} from './';

/**
 *
 * @export
 * @interface Grouping
 */
export interface Grouping {
  /**
   *
   * @type {number}
   * @memberof Grouping
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof Grouping
   */
  name?: string | null;
  /**
   *
   * @type {ObjectReference}
   * @memberof Grouping
   */
  invoiceProfile?: ObjectReference;
  /**
   *
   * @type {ObjectReference}
   * @memberof Grouping
   */
  organization?: ObjectReference;
  /**
   *
   * @type {Date}
   * @memberof Grouping
   */
  createdDate?: Date;
  /**
   *
   * @type {Date}
   * @memberof Grouping
   */
  modifiedDate?: Date;
  /**
   *
   * @type {boolean}
   * @memberof Grouping
   */
  isDisabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Grouping
   */
  isRemoved?: boolean;
  /**
   *
   * @type {string}
   * @memberof Grouping
   */
  invoiceReference?: string | null;
}

export function GroupingFromJSON(json: any): Grouping {
  return GroupingFromJSONTyped(json, false);
}

export function GroupingFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Grouping {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    name: !exists(json, 'name') ? undefined : json['name'],
    invoiceProfile: !exists(json, 'invoiceProfile')
      ? undefined
      : ObjectReferenceFromJSON(json['invoiceProfile']),
    organization: !exists(json, 'organization')
      ? undefined
      : ObjectReferenceFromJSON(json['organization']),
    createdDate: !exists(json, 'createdDate')
      ? undefined
      : new Date(json['createdDate']),
    modifiedDate: !exists(json, 'modifiedDate')
      ? undefined
      : new Date(json['modifiedDate']),
    isDisabled: !exists(json, 'isDisabled') ? undefined : json['isDisabled'],
    isRemoved: !exists(json, 'isRemoved') ? undefined : json['isRemoved'],
    invoiceReference: !exists(json, 'invoiceReference')
      ? undefined
      : json['invoiceReference'],
  };
}

export function GroupingToJSON(value?: Grouping | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    invoiceProfile: ObjectReferenceToJSON(value.invoiceProfile),
    organization: ObjectReferenceToJSON(value.organization),
    createdDate:
      value.createdDate === undefined
        ? undefined
        : value.createdDate.toISOString(),
    modifiedDate:
      value.modifiedDate === undefined
        ? undefined
        : value.modifiedDate.toISOString(),
    isDisabled: value.isDisabled,
    isRemoved: value.isRemoved,
    invoiceReference: value.invoiceReference,
  };
}
