/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  AddressData,
  AddressDataFromJSON,
  AddressDataFromJSONTyped,
  AddressDataToJSON,
  InvoiceProfile,
  InvoiceProfileFromJSON,
  InvoiceProfileFromJSONTyped,
  InvoiceProfileToJSON,
  ObjectReference,
  ObjectReferenceFromJSON,
  ObjectReferenceFromJSONTyped,
  ObjectReferenceToJSON,
  Price,
  PriceFromJSON,
  PriceFromJSONTyped,
  PriceToJSON,
  ProductContainerCategory,
  ProductContainerCategoryFromJSON,
  ProductContainerCategoryFromJSONTyped,
  ProductContainerCategoryToJSON,
  ProductContainerComment,
  ProductContainerCommentFromJSON,
  ProductContainerCommentFromJSONTyped,
  ProductContainerCommentToJSON,
  ProductContainerCommentUser,
  ProductContainerCommentUserFromJSON,
  ProductContainerCommentUserFromJSONTyped,
  ProductContainerCommentUserToJSON,
  ProductContainerIssue,
  ProductContainerIssueFromJSON,
  ProductContainerIssueFromJSONTyped,
  ProductContainerIssueToJSON,
  ProductContainerType,
  ProductContainerTypeFromJSON,
  ProductContainerTypeFromJSONTyped,
  ProductContainerTypeToJSON,
  ProductRow,
  ProductRowFromJSON,
  ProductRowFromJSONTyped,
  ProductRowToJSON,
  Program,
  ProgramFromJSON,
  ProgramFromJSONTyped,
  ProgramToJSON,
  UserProfile,
  UserProfileFromJSON,
  UserProfileFromJSONTyped,
  UserProfileToJSON,
} from './';

/**
 *
 * @export
 * @interface ProductContainer
 */
export interface ProductContainer {
  /**
   *
   * @type {number}
   * @memberof ProductContainer
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof ProductContainer
   */
  orderListId?: number | null;
  /**
   *
   * @type {string}
   * @memberof ProductContainer
   */
  note?: string | null;
  /**
   *
   * @type {Date}
   * @memberof ProductContainer
   */
  usageMonth?: Date;
  /**
   *
   * @type {string}
   * @memberof ProductContainer
   */
  name?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof ProductContainer
   */
  activeDraft?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof ProductContainer
   */
  removed?: boolean;
  /**
   *
   * @type {string}
   * @memberof ProductContainer
   */
  createdByUserId?: string | null;
  /**
   *
   * @type {string}
   * @memberof ProductContainer
   */
  axContactUserId?: string | null;
  /**
   *
   * @type {Date}
   * @memberof ProductContainer
   */
  createdDate?: Date;
  /**
   *
   * @type {Date}
   * @memberof ProductContainer
   */
  orderStatusChangedDate?: Date | null;
  /**
   *
   * @type {UserProfile}
   * @memberof ProductContainer
   */
  contactUser?: UserProfile;
  /**
   *
   * @type {ObjectReference}
   * @memberof ProductContainer
   */
  organization?: ObjectReference;
  /**
   *
   * @type {ObjectReference}
   * @memberof ProductContainer
   */
  publisher?: ObjectReference;
  /**
   *
   * @type {Program}
   * @memberof ProductContainer
   */
  program?: Program;
  /**
   *
   * @type {Array<ProductRow>}
   * @memberof ProductContainer
   */
  productRows?: Array<ProductRow> | null;
  /**
   *
   * @type {Array<ProductContainerComment>}
   * @memberof ProductContainer
   */
  comments?: Array<ProductContainerComment> | null;
  /**
   *
   * @type {InvoiceProfile}
   * @memberof ProductContainer
   */
  invoiceProfile?: InvoiceProfile;
  /**
   *
   * @type {AddressData}
   * @memberof ProductContainer
   */
  deliveryAddress?: AddressData;
  /**
   *
   * @type {AddressData}
   * @memberof ProductContainer
   */
  invoiceAddress?: AddressData;
  /**
   *
   * @type {ProductContainerType}
   * @memberof ProductContainer
   */
  type?: ProductContainerType;
  /**
   *
   * @type {ProductContainerCategory}
   * @memberof ProductContainer
   */
  category?: ProductContainerCategory;
  /**
   *
   * @type {Date}
   * @memberof ProductContainer
   */
  quoteValidToDate?: Date;
  /**
   *
   * @type {Array<Price>}
   * @memberof ProductContainer
   */
  totalSalesPrice?: Array<Price> | null;
  /**
   *
   * @type {Array<Price>}
   * @memberof ProductContainer
   */
  totalAlternativeSalesPrice?: Array<Price> | null;
  /**
   *
   * @type {Array<ProductContainerIssue>}
   * @memberof ProductContainer
   */
  issues?: Array<ProductContainerIssue> | null;
  /**
   *
   * @type {ProductContainerCommentUser}
   * @memberof ProductContainer
   */
  submittedBy?: ProductContainerCommentUser;
  /**
   *
   * @type {Date}
   * @memberof ProductContainer
   */
  readonly sent?: Date | null;
  /**
   *
   * @type {string}
   * @memberof ProductContainer
   */
  invoiceReference?: string | null;
  /**
   *
   * @type {string}
   * @memberof ProductContainer
   */
  orderReference?: string | null;
  /**
   *
   * @type {string}
   * @memberof ProductContainer
   */
  requisition?: string | null;
}

export function ProductContainerFromJSON(json: any): ProductContainer {
  return ProductContainerFromJSONTyped(json, false);
}

export function ProductContainerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ProductContainer {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    orderListId: !exists(json, 'orderListId') ? undefined : json['orderListId'],
    note: !exists(json, 'note') ? undefined : json['note'],
    usageMonth: !exists(json, 'usageMonth')
      ? undefined
      : new Date(json['usageMonth']),
    name: !exists(json, 'name') ? undefined : json['name'],
    activeDraft: !exists(json, 'activeDraft') ? undefined : json['activeDraft'],
    removed: !exists(json, 'removed') ? undefined : json['removed'],
    createdByUserId: !exists(json, 'createdByUserId')
      ? undefined
      : json['createdByUserId'],
    axContactUserId: !exists(json, 'axContactUserId')
      ? undefined
      : json['axContactUserId'],
    createdDate: !exists(json, 'createdDate')
      ? undefined
      : new Date(json['createdDate']),
    orderStatusChangedDate: !exists(json, 'orderStatusChangedDate')
      ? undefined
      : json['orderStatusChangedDate'] === null
      ? null
      : new Date(json['orderStatusChangedDate']),
    contactUser: !exists(json, 'contactUser')
      ? undefined
      : UserProfileFromJSON(json['contactUser']),
    organization: !exists(json, 'organization')
      ? undefined
      : ObjectReferenceFromJSON(json['organization']),
    publisher: !exists(json, 'publisher')
      ? undefined
      : ObjectReferenceFromJSON(json['publisher']),
    program: !exists(json, 'program')
      ? undefined
      : ProgramFromJSON(json['program']),
    productRows: !exists(json, 'productRows')
      ? undefined
      : json['productRows'] === null
      ? null
      : (json['productRows'] as Array<any>).map(ProductRowFromJSON),
    comments: !exists(json, 'comments')
      ? undefined
      : json['comments'] === null
      ? null
      : (json['comments'] as Array<any>).map(ProductContainerCommentFromJSON),
    invoiceProfile: !exists(json, 'invoiceProfile')
      ? undefined
      : InvoiceProfileFromJSON(json['invoiceProfile']),
    deliveryAddress: !exists(json, 'deliveryAddress')
      ? undefined
      : AddressDataFromJSON(json['deliveryAddress']),
    invoiceAddress: !exists(json, 'invoiceAddress')
      ? undefined
      : AddressDataFromJSON(json['invoiceAddress']),
    type: !exists(json, 'type')
      ? undefined
      : ProductContainerTypeFromJSON(json['type']),
    category: !exists(json, 'category')
      ? undefined
      : ProductContainerCategoryFromJSON(json['category']),
    quoteValidToDate: !exists(json, 'quoteValidToDate')
      ? undefined
      : new Date(json['quoteValidToDate']),
    totalSalesPrice: !exists(json, 'totalSalesPrice')
      ? undefined
      : json['totalSalesPrice'] === null
      ? null
      : (json['totalSalesPrice'] as Array<any>).map(PriceFromJSON),
    totalAlternativeSalesPrice: !exists(json, 'totalAlternativeSalesPrice')
      ? undefined
      : json['totalAlternativeSalesPrice'] === null
      ? null
      : (json['totalAlternativeSalesPrice'] as Array<any>).map(PriceFromJSON),
    issues: !exists(json, 'issues')
      ? undefined
      : json['issues'] === null
      ? null
      : (json['issues'] as Array<any>).map(ProductContainerIssueFromJSON),
    submittedBy: !exists(json, 'submittedBy')
      ? undefined
      : ProductContainerCommentUserFromJSON(json['submittedBy']),
    sent: !exists(json, 'sent')
      ? undefined
      : json['sent'] === null
      ? null
      : new Date(json['sent']),
    invoiceReference: !exists(json, 'invoiceReference')
      ? undefined
      : json['invoiceReference'],
    orderReference: !exists(json, 'orderReference')
      ? undefined
      : json['orderReference'],
    requisition: !exists(json, 'requisition') ? undefined : json['requisition'],
  };
}

export function ProductContainerToJSON(value?: ProductContainer | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    orderListId: value.orderListId,
    note: value.note,
    usageMonth:
      value.usageMonth === undefined
        ? undefined
        : value.usageMonth.toISOString(),
    name: value.name,
    activeDraft: value.activeDraft,
    removed: value.removed,
    createdByUserId: value.createdByUserId,
    axContactUserId: value.axContactUserId,
    createdDate:
      value.createdDate === undefined
        ? undefined
        : value.createdDate.toISOString(),
    orderStatusChangedDate:
      value.orderStatusChangedDate === undefined
        ? undefined
        : value.orderStatusChangedDate === null
        ? null
        : value.orderStatusChangedDate.toISOString(),
    contactUser: UserProfileToJSON(value.contactUser),
    organization: ObjectReferenceToJSON(value.organization),
    publisher: ObjectReferenceToJSON(value.publisher),
    program: ProgramToJSON(value.program),
    productRows:
      value.productRows === undefined
        ? undefined
        : value.productRows === null
        ? null
        : (value.productRows as Array<any>).map(ProductRowToJSON),
    comments:
      value.comments === undefined
        ? undefined
        : value.comments === null
        ? null
        : (value.comments as Array<any>).map(ProductContainerCommentToJSON),
    invoiceProfile: InvoiceProfileToJSON(value.invoiceProfile),
    deliveryAddress: AddressDataToJSON(value.deliveryAddress),
    invoiceAddress: AddressDataToJSON(value.invoiceAddress),
    type: ProductContainerTypeToJSON(value.type),
    category: ProductContainerCategoryToJSON(value.category),
    quoteValidToDate:
      value.quoteValidToDate === undefined
        ? undefined
        : value.quoteValidToDate.toISOString(),
    totalSalesPrice:
      value.totalSalesPrice === undefined
        ? undefined
        : value.totalSalesPrice === null
        ? null
        : (value.totalSalesPrice as Array<any>).map(PriceToJSON),
    totalAlternativeSalesPrice:
      value.totalAlternativeSalesPrice === undefined
        ? undefined
        : value.totalAlternativeSalesPrice === null
        ? null
        : (value.totalAlternativeSalesPrice as Array<any>).map(PriceToJSON),
    issues:
      value.issues === undefined
        ? undefined
        : value.issues === null
        ? null
        : (value.issues as Array<any>).map(ProductContainerIssueToJSON),
    submittedBy: ProductContainerCommentUserToJSON(value.submittedBy),
    invoiceReference: value.invoiceReference,
    orderReference: value.orderReference,
    requisition: value.requisition,
  };
}
