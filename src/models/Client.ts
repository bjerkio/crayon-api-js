/* tslint:disable */
/* eslint-disable */
/**
 * Crayon Group Customer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Flow,
    FlowFromJSON,
    FlowFromJSONTyped,
    FlowToJSON,
    Secret,
    SecretFromJSON,
    SecretFromJSONTyped,
    SecretToJSON,
} from './';

/**
 * 
 * @export
 * @interface Client
 */
export interface Client {
    /**
     * 
     * @type {string}
     * @memberof Client
     */
    clientId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Client
     */
    clientName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Client
     */
    clientUri?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Client
     */
    enabled?: boolean;
    /**
     * 
     * @type {Array<Secret>}
     * @memberof Client
     */
    clientSecrets?: Array<Secret> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Client
     */
    redirectUris?: Array<string> | null;
    /**
     * 
     * @type {Date}
     * @memberof Client
     */
    timeStamp?: Date;
    /**
     * 
     * @type {Flow}
     * @memberof Client
     */
    flow?: Flow;
}

export function ClientFromJSON(json: any): Client {
    return ClientFromJSONTyped(json, false);
}

export function ClientFromJSONTyped(json: any, ignoreDiscriminator: boolean): Client {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'clientId': !exists(json, 'clientId') ? undefined : json['clientId'],
        'clientName': !exists(json, 'clientName') ? undefined : json['clientName'],
        'clientUri': !exists(json, 'clientUri') ? undefined : json['clientUri'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'clientSecrets': !exists(json, 'clientSecrets') ? undefined : (json['clientSecrets'] === null ? null : (json['clientSecrets'] as Array<any>).map(SecretFromJSON)),
        'redirectUris': !exists(json, 'redirectUris') ? undefined : json['redirectUris'],
        'timeStamp': !exists(json, 'timeStamp') ? undefined : (new Date(json['timeStamp'])),
        'flow': !exists(json, 'flow') ? undefined : FlowFromJSON(json['flow']),
    };
}

export function ClientToJSON(value?: Client | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'clientId': value.clientId,
        'clientName': value.clientName,
        'clientUri': value.clientUri,
        'enabled': value.enabled,
        'clientSecrets': value.clientSecrets === undefined ? undefined : (value.clientSecrets === null ? null : (value.clientSecrets as Array<any>).map(SecretToJSON)),
        'redirectUris': value.redirectUris,
        'timeStamp': value.timeStamp === undefined ? undefined : (value.timeStamp.toISOString()),
        'flow': FlowToJSON(value.flow),
    };
}

